#!/bin/bash
# run the script with one command line argument, which represents the input file name
# $./Lab7_2script actor_movies.txt
# actor_movies.txt is the input file name as the command line argument
# First, ask the user to input two movie titles
#        if both movie titles are in the actor_movies.txt, continue;
#        otherwise, quit immediately
# Repeatedly display the main menu to let the user choose an option (enter Q or q to quit):
#                       if opiton is A (or a), print all the actors in either of the two movies;
#                       if option is C (or c), print all the common actors in both of the movies;
#                       if option is O (or o), print all the actors who are in one movie, but not in both.
#                       if opiton is Q (or q), quit the script
#                       if other option, display the message of invalid choice.

# Begin with checking whether the number of the command line arguments is exactly one
if [ $# -ne 1 ]
then
    echo "Warning: need exactly one command line argument."
    echo "Usage: $0 <inputfile_name>"
    exit 1
fi

# Ask the user to input two movie titles to search for
echo "Please input the first movie title:"
read movie1
echo "Please input the second movie title:"
read movie2
# Check if both movies are in the input file
# if either one is not, quit the script
# otherwise continue...
if [ `grep -c -i "$movie1" $1` -gt 0 ] && [ `grep -c -i "$movie2" $1` -gt 0 ]
then    
    echo "Your input matches these two movies: "
    grep -m 1 -i -o ";[^;]*$movie1[^;]*;" $1 | cut -d';' -f 2
    grep -m 1 -i -o ";[^;]*$movie2[^;]*;" $1 | cut -d';' -f 2
    echo "Both movies are in the database, please continue..."
    #create two sets for the actors in each movie respectively
    grep -i "$movie1" $1 | cut -f 1 -d';' > actors_in_movie1.txt
    grep -i "$movie2" $1 | cut -f 1 -d';' > actors_in_movie2.txt
else
    echo "Invalid movie title."
    exit 1
fi

# Ask the user to input the option for search
# Your script should start here
# create a loop to repeatedly ask the user to input the option for searching until the user enters Q or q to quit
# Creating while loop that does its thang
fin=1
while [ $fin -ne 0 ]
do
  echo "Please input your menu option (enter Q or q to quit)"
  echo "A --to print all the actors in either of the two movies."
  echo "C --to print all the common actors in both of the movies."
  echo "O --to print all the actors who are in one movie, but not in both."
  read usr_option
  if [[ "$usr_option" == "A" || "$usr_option" == "a" ]]
  then
    echo "All the actors in either of the two movies:"
    sort -u actors_in_movie1.txt actors_in_movie2.txt #gets in at leadt one omovie
  elif [[ "$usr_option" == "C" || "$usr_option" == "c" ]]
  then
    echo "Common actors in both movies:"
    sort actors_in_movie1.txt actors_in_movie2.txt | uniq -d #gets intersection
  elif [[ "$usr_option" == "O" || "$usr_option" == "o" ]]
  then
    echo "All the actors who are in one movie, but not in both:"
    sort actors_in_movie1.txt actors_in_movie2.txt | uniq -u #gets symmetric difference
  elif [[ "$usr_option" == "Q" || "$usr_option" == "q" ]]
  then
    fin=0 #ends the loop
  else
    echo "Invalid option."
  fi
done

























#delete the temporary files
echo "Delete all temporary files..."
rm actors_in*.txt
exit 0

